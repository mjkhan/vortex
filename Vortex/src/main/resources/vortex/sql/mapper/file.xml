<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="file">

<resultMap id="fileRow" type="file">
	<id property="id" column="FILE_ID"/>
	<result property="type" column="FILE_TYPE"/>
	<result property="name" column="FILE_NAME"/>
	<result property="path" column="FILE_PATH"/>
	<result property="location" column="LOCATION"/>
	<result property="url" column="URL"/>
	<result property="contentType" column="CNT_TYPE"/>
	<result property="description" column="DESCRP"/>
	<result property="size" column="FILE_SIZE"/>
	<result property="createdBy" column="INS_ID"/>
	<result property="createdAt" column="INS_TIME"/>
	<result property="status" column="STATUS"/>
</resultMap>

<sql id="file-refs">
	CONCAT(#{pathPrefix}, FILE_PATH) LOCATION, CONCAT(#{urlPrefix}, FILE_ID) URL
<!-- 
	CONCAT(#{pathPrefix}, FILE_PATH) LOCATION, CONCAT(#{urlPrefix}, FILE_PATH) URL
 -->
</sql>

<!-- 파일 정보 찾기 -->
<select id="search" parameterType="hashmap" resultType="dataobject">
<if test="fetch != null and fetch &gt; 0"><!-- 페이징 필요 시 -->
	SELECT SQL_CALC_FOUND_ROWS A.*, <include refid="file-refs"/>
	FROM TBL_FILE A
	WHERE FILE_TYPE = #{fileType}
	<if test="searchBy != null and searchTerms != null">
	AND ${searchBy} LIKE CONCAT(#{searchTerms}, '%')
	</if>
	<if test="status == null">AND STATUS &lt;&gt; '999'</if> 
	<if test="status != null">AND STATUS = #{status}</if> 
	<if test="order == null">ORDER BY FILE_ID DESC</if>
	<if test="order != null">ORDER BY #{order}</if>
	LIMIT #{start}, #{fetch} 
</if>
<if test="fetch == null or fetch == 0"><!-- 페이징 불필요 시 -->
	SELECT A.*, <include refid="file-refs"/>
	FROM TBL_FILE A
	WHERE FILE_TYPE = #{fileType}
	<if test="searchBy != null and searchTerms != null">
	AND ${searchBy} LIKE CONCAT(#{searchTerms}, '%')
	</if>
	<if test="status == null">AND STATUS &lt;&gt; '999'</if> 
	<if test="status != null">AND STATUS = #{status}</if> 
	<if test="order == null">ORDER BY FILE_ID DESC</if>
	<if test="order != null">ORDER BY #{order}</if>
</if>
</select>

<sql id="select-by-id">
SELECT A.*, <include refid="file-refs"/>
FROM TBL_FILE A
WHERE FILE_ID IN (<foreach collection="fileIDs" item="fileID" separator=",">#{fileID}</foreach>)
</sql>
	
<!-- ID별 파일 정보 가져오기 -->
<select id="getInfo" parameterType="hashmap" resultType="dataobject">
<include refid="select-by-id"/>
</select>

<!-- ID별 File 가져오기 -->
<select id="getFile" parameterType="hashmap" resultMap="fileRow">
<include refid="select-by-id"/>
</select>

<!-- 파일 정보 생성 -->
<insert id="insert" parameterType="hashmap">
<selectKey keyProperty="file.id,file.path" keyColumn="FILE_ID,FILE_PATH" resultType="hashmap" order="BEFORE">
SELECT FILE_ID, CONCAT(DATE_FORMAT(CURDATE(), '%y/%m/'), FILE_ID, <if test="ext == null">''</if><if test="ext != null">'.${ext}'</if>) FILE_PATH
FROM (
	SELECT IFNULL(CAST(CAST(MAX(FILE_ID) AS UNSIGNED) + 1 AS CHAR(11)), CONCAT(TODAY, '00001')) FILE_ID
	FROM TBL_FILE A, (SELECT DATE_FORMAT(CURDATE(), '%y%m%d') TODAY) B
	WHERE FILE_ID LIKE CONCAT(TODAY, '%')
) A
</selectKey>
INSERT INTO TBL_FILE (
    FILE_ID
   ,FILE_TYPE
   ,FILE_NAME
   ,FILE_PATH
   ,CNT_TYPE
   ,DESCRP
   ,FILE_SIZE
   ,INS_ID
   ,INS_TIME
   ,STATUS
) VALUES (
    #{file.id}
   ,#{fileType}
   ,#{file.name}
   ,#{file.path}
   ,#{file.contentType}
   ,#{file.description}
   ,#{file.size}
   ,#{currentUser.id}
   ,CURRENT_TIMESTAMP
   ,'001'
)
</insert>

<!-- 파일 정보 수정 -->
<update id="update" parameterType="hashmap">
UPDATE TBL_FILE SET
   DESCRP = #{file.description}
WHERE FILE_ID = #{file.id}
</update>

<!-- fileIDs의 파일 정보의 상태를 status로 변경 -->
<update id="setStatus" parameterType="hashmap">
UPDATE TBL_FILE SET
	STATUS = #{status}
WHERE FILE_ID IN (<foreach collection="fileIDs" item="fileID" separator=", ">#{fileID}</foreach>)
AND STATUS &lt;&gt; #{status}
</update>

<!-- fileIDs의 파일 정보를 삭제 -->
<delete id="delete" parameterType="hashmap">
DELETE FROM TBL_FILE
WHERE FILE_ID IN (<foreach collection="fileIDs" item="fileID" separator=", ">#{fileID}</foreach>)
</delete>

</mapper>