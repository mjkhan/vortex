<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu">

<resultMap id="menuRow" type="menu">
	<id property="id" column="MENU_ID"/>
	<result property="name" column="MENU_NAME"/>
	<result property="actionPath" column="ACT_PATH"/>
	<result property="imageConfig" column="IMG_CFG"/>
	<result property="parentID" column="PRNT_ID"/>
	<result property="sortOrder" column="SRT_ORD"/>
	<result property="modifiedBy" column="UPD_ID"/>
	<result property="lastModified" column="UPD_TIME"/>
	<result property="status" column="STATUS"/>
</resultMap>

<!-- 메뉴 트리 생성을 위한 목록 가져오기 -->
<select id="getTree" resultMap="menuRow">
SELECT * FROM TBL_MENU
WHERE STATUS &lt;&gt; '999'
ORDER BY PRNT_ID, SRT_ORD, MENU_ID
</select>

<!-- 하위 메뉴 목록 가져오기 -->
<select id="getMenus" parameterType="string"  resultType="dataobject">
SELECT * FROM TBL_MENU
WHERE PRNT_ID = #{value}
AND STATUS &lt;&gt; '999'
ORDER BY SRT_ORD, MENU_ID
</select>

<!-- menu action별 permission 가져오기 -->
<select id="getMenuActionPermissions" resultType="dataobject">
SELECT A.ACT_PATH, PMS_ID
FROM TBL_MENU A, TBL_PMS_ACTION B
WHERE A.ACT_PATH = B.ACT_PATH
ORDER BY A.ACT_PATH
</select>

<!-- Menu 가져오기 -->
<select id="getMenu" parameterType="string" resultMap="menuRow">
SELECT * FROM TBL_MENU
WHERE MENU_ID = #{value}
</select>

<!-- 메뉴 정보 생성 -->
<insert id="insert" parameterType="hashmap">
<selectKey keyProperty="menu.id" resultType="string" order="BEFORE">
SELECT LPAD(IFNULL(CAST(MAX(MENU_ID) AS UNSIGNED) + 1, 1), 5, '0') NEW_ID
FROM TBL_MENU
</selectKey>
INSERT INTO TBL_MENU (
	MENU_ID
   ,MENU_NAME
   ,ACT_PATH
   ,IMG_CFG
   ,PRNT_ID
   ,SRT_ORD
   ,UPD_ID
   ,UPD_TIME
   ,STATUS
) VALUES (
	#{menu.id}
   ,#{menu.name}
   ,#{menu.actionPath}
   ,#{menu.imageConfig}
   ,#{menu.parentID}
   ,99999
   ,#{currentUser.id}
   ,CURRENT_TIMESTAMP
   ,'001'
)
</insert>

<!-- 메뉴 정보 수정 -->
<update id="update" parameterType="hashmap">
UPDATE TBL_MENU SET
	MENU_NAME = #{menu.name}
   ,ACT_PATH = #{menu.actionPath}
   ,IMG_CFG = #{menu.imageConfig}
   ,UPD_ID = #{currentUser.id}
   ,UPD_TIME = CURRENT_TIMESTAMP
WHERE MENU_ID = #{menu.id}
</update>

<!-- 메뉴 이동 -->
<update id="move" parameterType="hashmap">
UPDATE TBL_MENU SET
	PRNT_ID = #{parentID}
WHERE MENU_ID IN (<foreach collection="menuIDs" item="menuID" separator=", ">#{menuID}</foreach>)
</update>

<!-- 메뉴 순서 변경 -->
<update id="reorder" parameterType="hashmap">
UPDATE TBL_MENU SET
	SRT_ORD = CASE MENU_ID <foreach collection="menuIDs" item="menuID" index="index">WHEN #{menuID} THEN #{index}</foreach> ELSE 99999 END
WHERE MENU_ID IN (<foreach collection="menuIDs" item="menuID" separator=", ">#{menuID}</foreach>)
AND PRNT_ID = #{parentID}
</update>

<!-- 메뉴 상태 수정 -->
<update id="setStatus" parameterType="hashmap">
UPDATE TBL_MENU SET
	STATUS = #{status}
   ,UPD_ID = #{currentUser.id}
   ,UPD_TIME = CURRENT_TIMESTAMP
WHERE MENU_ID IN (<foreach collection="menuIDs" item="menuID" separator=", ">#{menuID}</foreach>)
AND STATUS &lt;&gt; #{status}
</update>

</mapper>