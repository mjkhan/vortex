<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="roleMember">

<!-- roleID에 설정된 액션 정보 가져오기 -->
<select id="getActions" parameterType="hashmap" resultType="hashmap">
<if test="fetch != null and fetch &gt; 0"><!-- 페이징 필요 시 -->
	SELECT SQL_CALC_FOUND_ROWS A.ACT_ID, ACT_NAME, ACT_PATH, INS_ID, INS_TIME
	FROM TBL_ROLE_ACTION A, TBL_ACTION B
	WHERE ROLE_ID = #{roleID}
	AND A.ACT_ID = B.ACT_ID
	ORDER BY A.ACT_ID
	LIMIT #{start}, #{fetch} 
</if>
<if test="fetch == null or fetch == 0"><!-- 페이징 불필요 시 -->
	SELECT A.ACT_ID, ACT_NAME, ACT_PATH, INS_ID, INS_TIME
	FROM TBL_ROLE_ACTION A, TBL_ACTION B
	WHERE ROLE_ID = #{roleID}
	AND A.ACT_ID = B.ACT_ID
	ORDER BY A.ACT_ID
</if>
</select>

<!-- menu action별 role 가져오기 -->
<select id="getMenuActionRoles" resultType="dataobject">
SELECT ACT_PATH, ROLE_ID
FROM TBL_MENU A, TBL_ROLE_ACTION B, TBL_ACTION C
WHERE A.ACT_ID = B.ACT_ID AND B.ACT_ID = C.ACT_ID
ORDER BY A.ACT_ID;
</select>

<!-- user role에 대해 허용된 action role 가져오기 -->
<select id="countUserRolesForAction" parameterType="hashmap" resultType="int">
SELECT COUNT(ROLE_ID) ROLE_CNT
FROM TBL_ROLE_USER A
WHERE USER_ID = #{userID}
AND EXISTS (
	SELECT ROLE_ID
	FROM TBL_ACTION B, TBL_ROLE_ACTION C
	WHERE ACT_PATH = #{actionPath}
	AND B.ACT_ID = C.ACT_ID
	AND ROLE_ID = A.ROLE_ID
)
</select>

<!-- roleIDs의 역할에 actionIDs의 액션 추가 -->
<insert id="addActions" parameterType="hashmap">
INSERT INTO TBL_ROLE_ACTION (ROLE_ID, ACT_ID, INS_ID, INS_TIME)
SELECT ROLE_ID, ACT_ID, #{addedBy}, CURRENT_TIMESTAMP
FROM (
	<foreach collection="roleIDs" item="roleID" separator=" UNION">SELECT #{roleID} ROLE_ID</foreach>
) A, (
	<foreach collection="actionIDs" item="actionID" separator=" UNION">SELECT #{actionID} ACT_ID</foreach>
) B
WHERE NOT EXISTS (
	SELECT ROLE_ID, ACT_ID
	FROM TBL_ROLE_ACTION C
	WHERE C.ROLE_ID = A.ROLE_ID
	AND C.ACT_ID = B.ACT_ID
)
</insert>

<!-- roleIDs의 역할에서 actionIDs의 액션 삭제 -->
<delete id="deleteActions" parameterType="hashmap">
DELETE FROM TBL_ROLE_ACTION
<if test="roleIDs != null">
WHERE ROLE_ID IN (<foreach collection="roleIDs" item="roleID" separator=", ">#{roleID}</foreach>)
</if>
<if test="actionIDs != null">
	<if test="roleIDs != null">AND</if>
	<if test="roleIDs == null">WHERE</if>
	ACT_ID IN (<foreach collection="actionIDs" item="actionID" separator=", ">#{actionID}</foreach>)
</if>
</delete>

<!-- groupIDs 그룹의 역할에서 액션 삭제 -->
<delete id="deleteActionsOfGroups" parameterType="hashmap">
DELETE FROM TBL_ROLE_ACTION
<if test="groupIDs != null">
WHERE ACT_ID IN (
	SELECT ACT_ID
	FROM TBL_ACTION
	WHERE GRP_ID IN (<foreach collection="groupIDs" item="groupID" separator=", ">#{groupID}</foreach>)
)
</if>
</delete>

<!-- roleID에 설정된 사용자 정보 가져오기 -->
<select id="getUsers" parameterType="hashmap" resultType="hashmap">
<if test="fetch != null and fetch &gt; 0"><!-- 페이징 필요 시 -->
	SELECT SQL_CALC_FOUND_ROWS A.USER_ID, USER_NAME, ALIAS, INS_ID, A.INS_TIME
	FROM TBL_ROLE_USER A, TBL_USER B
	WHERE ROLE_ID = #{roleID}
	AND STATUS &lt;&gt; '999'
	AND A.USER_ID = B.USER_ID
	ORDER BY A.USER_ID
	LIMIT #{start}, #{fetch} 
</if>
<if test="fetch == null or fetch == 0"><!-- 페이징 필요 시 -->
	SELECT A.USER_ID, USER_NAME, ALIAS, INS_ID, A.INS_TIME
	FROM TBL_ROLE_USER A, TBL_USER B
	WHERE ROLE_ID = #{roleID}
	AND STATUS &lt;&gt; '999'
	AND A.USER_ID = B.USER_ID
	ORDER BY A.USER_ID
</if>
</select>

<!-- roleIDs의 역할에 userIDs의 사용자 추가 -->
<insert id="addUsers" parameterType="hashmap">
INSERT INTO TBL_ROLE_USER (ROLE_ID, USER_ID, INS_ID, INS_TIME)
SELECT ROLE_ID, USER_ID, #{addedBy}, CURRENT_TIMESTAMP
FROM (
	<foreach collection="roleIDs" item="roleID" separator=" UNION">SELECT #{roleID} ROLE_ID</foreach>
) A, (
	<foreach collection="userIDs" item="userID" separator=" UNION">SELECT #{userID} USER_ID</foreach>
) B
WHERE NOT EXISTS (
	SELECT ROLE_ID, USER_ID
	FROM TBL_ROLE_USER C
	WHERE C.ROLE_ID = A.ROLE_ID
	AND C.USER_ID = B.USER_ID
)
</insert>

<!-- roleIDs의 역할에서 userIDs의 사용자 삭제 -->
<delete id="deleteUsers" parameterType="hashmap">
DELETE FROM TBL_ROLE_USER
<if test="roleIDs != null">
WHERE ROLE_ID IN (<foreach collection="roleIDs" item="roleID" separator=", ">#{roleID}</foreach>)
</if>
<if test="userIDs != null">
	<if test="roleIDs == null">WHERE</if>
	<if test="roleIDs != null">AND</if>
	USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</if>
</delete>

</mapper>