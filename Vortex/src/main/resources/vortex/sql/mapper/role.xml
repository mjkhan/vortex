<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="role">

<resultMap id="roleRow" type="role">
	<id property="id" column="ROLE_ID"/>
	<result property="name" column="ROLE_NAME"/>
	<result property="description" column="DESCRP"/>
	<result property="modifiedBy" column="UPD_ID"/>
	<result property="lastModified" column="UPD_TIME"/>
</resultMap>

<!-- 역할 목록 가져오기 -->
<select id="getRoles" resultType="dataobject">
SELECT *
FROM TBL_ROLE
ORDER BY ROLE_ID
</select>

<!-- 액션 또는 사용자 설정을 위한 역할 목록 가져오기 -->
<select id="getRolesForMember" parameterType="string" resultType="dataobject">
<if test="value == 'action'">
SELECT 'everyone' ROLE_ID, '모두' ROLE_NAME, '로그인하지 않은 사용자를 포함한 모든 사용자' DESCRP UNION
SELECT 'authenticated' ROLE_ID, '인증된 사용자' ROLE_NAME, '로그인한 모든 사용자' DESCRP UNION
</if>
SELECT ROLE_ID, ROLE_NAME, DESCRP
FROM TBL_ROLE
ORDER BY ROLE_ID
</select>

<!-- 역할 가져오기 -->
<select id="getRole" parameterType="string" resultMap="roleRow">
SELECT *
FROM TBL_ROLE
WHERE ROLE_ID = #{roleID}
</select>

<!-- 역할 정보 생성 -->
<insert id="insert" parameterType="role">
INSERT INTO TBL_ROLE (
	ROLE_ID,
	ROLE_NAME,
	DESCRP,
	UPD_ID,
	UPD_TIME
) VALUES (
	#{id},
	#{name},
	#{description},
	#{modifiedBy},
	CURRENT_TIMESTAMP
)
</insert>

<!-- 역할 정보 수정 -->
<update id="update" parameterType="role">
UPDATE TBL_ROLE SET
	ROLE_NAME = #{name},
	DESCRP = #{description},
	UPD_ID = #{modifiedBy},
	UPD_TIME = CURRENT_TIMESTAMP
WHERE ROLE_ID = #{id}
</update>

<!-- roleIDs의 역할 정보를 삭제 -->
<delete id="remove" parameterType="hashmap">
DELETE FROM TBL_ROLE
<if test="roleIDs != null">
WHERE ROLE_ID IN (<foreach collection="roleIDs" item="roleID" separator=", ">#{roleID}</foreach>)
</if>
</delete>

</mapper>