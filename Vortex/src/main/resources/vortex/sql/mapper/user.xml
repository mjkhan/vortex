<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

<resultMap id="userRow" type="user">
	<id property="id" column="USER_ID"/>
	<result property="name" column="USER_NAME"/>
	<result property="alias" column="ALIAS"/>
	<result property="password" column="PASSWD"/>
	<result property="createdBy" column="INS_ID"/>
	<result property="createdAt" column="INS_TIME"/>
	<result property="modifiedBy" column="UPD_ID"/>
	<result property="lastModified" column="UPD_TIME"/>
	<result property="status" column="STATUS"/>
</resultMap>

<!-- 사용자 찾기 -->
<select id="search" parameterType="hashmap" resultType="dataobject">
<if test="fetch != null and fetch &gt; 0"><!-- 페이징 필요 시 -->
	SELECT SQL_CALC_FOUND_ROWS *
	FROM TBL_USER
	WHERE STATUS <if test="status == null">&lt;&gt; '999'</if><if test="status != null">= #{status}</if>
	<if test="field != null and value != null">AND ${field} LIKE CONCAT(#{value}, '%')</if>
	ORDER BY <if test="order != null">#{order}</if><if test="order == null">USER_ID</if>
	LIMIT #{start}, #{fetch} 
</if>
<if test="fetch == null or fetch == 0"><!-- 페이징 불필요 시 -->
	SELECT *
	FROM TBL_USER
	WHERE STATUS <if test="status == null">&lt;&gt; '999'</if><if test="status != null">= #{status}</if>
	<if test="field != null and value != null">AND ${field} LIKE CONCAT(#{value}, '%')</if>
	ORDER BY <if test="order != null">#{order}</if><if test="order == null">USER_ID</if>
</if>
</select>

<sql id="select-by-id">
SELECT *
FROM TBL_USER
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</sql>

<!-- ID별 User 가져오기 -->
<select id="getUsers" parameterType="hashmap" resultMap="userRow">
<include refid="select-by-id"/>
</select>

<!-- ID별 사용자 목록 -->
<select id="getInfo" parameterType="hashmap" resultType="dataobject">
<include refid="select-by-id"/>
</select>

<!-- 사용자 정보 생성 -->
<insert id="insert" parameterType="hashmap">
INSERT INTO TBL_USER (
	USER_ID
  , USER_NAME
  , ALIAS
  , PASSWD
  , INS_ID
  , INS_TIME
  , UPD_ID
  , UPD_TIME
  , STATUS
) VALUES (
	#{user.id}
  , #{user.name}
  , #{user.alias}
  , #{user.password}
  , #{currentUser.id}
  , CURRENT_TIMESTAMP
  , #{currentUser.id}
  , CURRENT_TIMESTAMP
  , '001'
)
</insert>

<!-- 사용자 정보 수정 -->
<update id="update" parameterType="hashmap">
UPDATE TBL_USER SET
	USER_NAME = #{user.name}
  , ALIAS = #{user.alias}
  , PASSWD = #{user.password}
  , UPD_ID = #{currentUser.id}
  , UPD_TIME = CURRENT_TIMESTAMP
WHERE USER_ID = #{user.id}
</update>

<!-- 사용자 상태 변경 -->
<update id="setStatus" parameterType="hashmap">
UPDATE TBL_USER SET
	STATUS = #{status}
  , UPD_ID = #{currentUser.id}
  , UPD_TIME = CURRENT_TIMESTAMP
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</update>

<!-- userIDs의 사용자 정보를 삭제 -->
<delete id="delete" parameterType="hashmap">
DELETE FROM TBL_USER
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</delete>

</mapper>