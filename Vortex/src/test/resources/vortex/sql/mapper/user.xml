<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

<resultMap id="userRow" type="user">
	<id property="id" column="USER_ID"/>
	<result property="name" column="USER_NAME"/>
	<result property="alias" column="ALIAS"/>
	<result property="createdAt" column="INS_TIME"/>
	<result property="lastModified" column="UPD_TIME"/>
	<result property="status" column="STATUS"/>
</resultMap>

<!-- 사용자 목록 가져오기 -->
<select id="search" parameterType="hashmap" resultType="dataobject">
<if test="fetch != null and fetch &gt; 0"><!-- 페이징 필요 시 -->
	SELECT SQL_CALC_FOUND_ROWS *, FOUND_ROWS() AS TOTAL_ROW_CNT
	FROM TBL_USER
	WHERE STATUS <if test="status == null">&lt;&gt; '999'</if><if test="status != null">= #{status}</if>
	<if test="field != null and value != null">AND #{field} LIKE CONCAT(#{value}, '%')</if>
	ORDER BY <if test="order != null">#{order}</if><if test="order == null">USER_ID</if>
	LIMIT #{start}, #{fetch} 
</if>
<if test="fetch == null or fetch == 0"><!-- 페이징 불필요 시 -->
	SELECT *
	FROM TBL_USER
	WHERE STATUS <if test="status == null">&lt;&gt; '999'</if><if test="status != null">= #{status}</if>
	<if test="field != null and value != null">AND #{field} LIKE CONCAT(#{value}, '%')</if>
	ORDER BY <if test="order != null">#{order}</if><if test="order == null">USER_ID</if>
</if>
</select>

<!-- 사용자 가져오기 -->
<select id="getUsers" parameterType="hashmap" resultMap="userRow">
SELECT *
FROM TBL_USER
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</select>

<!-- 사용자 정보 생성 -->
<insert id="insert" parameterType="user">
INSERT INTO TBL_USER (
	USER_ID,
	USER_NAME,
	ALIAS,
	INS_TIME,
	UPD_TIME,
	STATUS
) VALUES (
	#{id},
	#{name},
	#{alias},
	CURRENT_TIMESTAMP,
	CURRENT_TIMESTAMP,
	'001'
)
</insert>

<!-- 사용자 정보 수정 -->
<update id="update" parameterType="user">
UPDATE TBL_USER SET
	USER_NAME = #{name},
	ALIAS = #{alias},
	UPD_TIME = CURRENT_TIMESTAMP
WHERE USER_ID = #{id}
</update>

<!-- 사용자 상태 변경 -->
<update id="setStatus" parameterType="hashmap">
UPDATE TBL_USER SET
	STATUS = #{status},
	UPD_TIME = CURRENT_TIMESTAMP
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</update>

<!-- userIDs의 사용자 정보를 삭제 -->
<delete id="delete" parameterType="hashmap">
DELETE FROM TBL_USER
<if test="userIDs != null">
WHERE USER_ID IN (<foreach collection="userIDs" item="userID" separator=", ">#{userID}</foreach>)
</if>
</delete>

</mapper>